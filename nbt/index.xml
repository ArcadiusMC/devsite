<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NBT on Arcadius Docs</title><link>/nbt/</link><description>Recent content in NBT on Arcadius Docs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/nbt/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Usage</title><link>/nbt/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/nbt/basic/</guid><description>Reading binary data:
InputStream input = // Get an input stream CompoundTag tag = BinaryTags.readCompressed(input); int intValue = tag.getInt(&amp;#34;key&amp;#34;); String string = tag.getString(&amp;#34;other_key&amp;#34;); Writing binary data:
CompoundTag tag = // Get a tag OutputStream stream = // Create a stream BinaryTags.writeCompressed(stream, tag); SNBT parsing:
import net.forthecrown.nbt.string.Snbt; String input = // Get an SNBT input BinaryTag tag = Snbt.parse(input); SNBT writing:
BinaryTag tag = // Get a tag String output = Snbt.</description></item><item><title>Tag Paths</title><link>/nbt/paths/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/nbt/paths/</guid><description>Minecraft wiki: https://minecraft.wiki/w/NBT_path_format
NBT paths can be created and used like so:
import net.forthecrown.nbt.path.TagPath; TagPath path = TagPath.parse(&amp;#34;foo.bar[]&amp;#34;); BinaryTag tag = // Get a tag List&amp;lt;BinaryTag&amp;gt; results = path.get(tag); int removed = path.remove(tag); int changed = path.set(tag, BinaryTags.stringTag(&amp;#34;Hello, world!&amp;#34;)); Paths can also be created programmatically with TagPath.builder(), the above shown example would look like so:
TagPath path = TagPath.builder() .addObjectNode(&amp;#34;foo&amp;#34;) .addObjectNode(&amp;#34;bar&amp;#34;) .addMatchAll() .build();</description></item></channel></rss>